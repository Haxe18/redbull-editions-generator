name: Generate/Update Red Bull Editions Data and create a release

on:
  push:
    branches:
      - 'main'
    paths:
      - '**.py'
      - 'requirements.txt'

  schedule:
    - cron: '11 5 * * *' # Run every day at 5:11 (or later) UTC
  workflow_dispatch:  # Allow manual trigger
    inputs:
      force:
        description: 'Force reprocess all data (ignore cache)'
        required: false
        type: boolean
        default: false

# Cancel in-progress runs when a new push is made
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: write  # Allow the workflow to commit code and create releases

jobs:
  collect-and-process:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'

    - name: Cache Python dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Collect Red Bull data
      run: python collector.py
      continue-on-error: false

    - name: Process data with Gemini
      env:
        GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
      run: |
        if [ "${{ github.event.inputs.force }}" = "true" ]; then
          echo "Force mode enabled - reprocessing all data"
          python processor.py --force
        else
          python processor.py
        fi
      continue-on-error: false

    - name: Check for changes
      id: check_changes
      run: |
        # Check for changes in multiple important files
        if git diff --quiet data/redbull_editions_final.json data/collection_summary.json data/processed/; then
          echo "has_changes=false" >> $GITHUB_OUTPUT
          echo "No changes detected in data files"
        else
          echo "has_changes=true" >> $GITHUB_OUTPUT
          echo "Changes detected in data files"
        fi

    - name: Commit and push changes
      if: steps.check_changes.outputs.has_changes == 'true'
      run: |
        git config --local user.email "github-actions[bot]@users.noreply.github.com"
        git config --local user.name "github-actions[bot]"
        git add data
        git commit -m "ðŸ”„ Update Red Bull editions data [$(date +'%Y-%m-%d %H:%M')]"
        git push

    - name: Create release
      if: steps.check_changes.outputs.has_changes == 'true'
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        # Creates a new Release with current date and changelog.md as description
        gh release create "v$(date +'%Y.%m.%d-%H%M')" \
          --title "Data Update $(date +'%Y-%m-%d %H:%M')" \
          --notes-file data/latest_changelog.md
